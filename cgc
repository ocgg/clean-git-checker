#!/bin/bash

ROOT=$(realpath "$(dirname "$0")")
REPOS_FILE_NAME="repos_to_check.txt"
REPOS_FILE_PATH="$ROOT/$REPOS_FILE_NAME"
WARNINGS=()

print_warning() {
    printf "\e[0;33mWARNING: %s\e[0m\n" "$1" >&2
}

print_warnings() {
    echo
    printf "\e[1;m%s contains errors!\e[0m\n" "$REPOS_FILE_NAME"
    for message in "${WARNINGS[@]}"; do
        print_warning "$message"
    done
    printf "Check it at: \e]8;;%s\e\\%s\e]8;;\e\\\\\n" "$ROOT" "$ROOT"
}

show_menu() {
    echo "diff [d] | commit [c] | goto [cd] | ignore [i] or quit [q] ?"
}

if [ ! -f "$REPOS_FILE_PATH" ]; then
    print_warning "File not found: $ROOT/$REPOS_FILE_NAME"
    echo "Creating empty file."
    touch "$ROOT/$REPOS_FILE_NAME"
    echo "Please provide paths to git directories to check in that file, one path a line, and retry."
    exit 1
fi

# if file dont exist, exit with error "file not found: repos_to_check (should be in $ROOT)"
# if file empty, exit with error "no path provided"

# For each path, check if exists
# if path dont exist, print a warning skipping it
# if path exist,
    # cd path
    # git status --porcelain
    # if clean, skip
    # if unclean, print "UNCLEAN: [repo name]", then git status, and ask:
    # diff (& loop) | commit | exit & cd | quit

# if no unclean repo found, exit with status code OK

while IFS= read -r dir; do
    if [ ! -d "$dir" ]; then
        WARNINGS+=("Directory not found: $dir")
        continue;
    fi

    pushd "$dir" > /dev/null || exit

    if ! git rev-parse > /dev/null 2>&1; then
        WARNINGS+=("Not a git repository: $dir")
    elif [ -n "$(git status --porcelain)" ]; then
        printf "\e[0;31mUNCLEAN: %s\e[0m\n\n" "$dir";
        git status --short
        echo
        while true; do
            show_menu
            action=""
            read -r -p "> " action < /dev/tty
            case "$action" in
                d) git diff;;
                c)
                    read -r -p "Message: " msg < /dev/tty
                    git add --all
                    git commit -m "$msg" && echo "Committed."
                    break
                    ;;
                cd)
                    echo
                    printf "\e[1;32mOpening %s in a new session...\e[0m\n" "$dir"
                    printf "\e[1;32m'exit' or ctrl+d to come back.\e[0m\n"
                    echo
                    cd "$dir" || exit
                    $SHELL -i < /dev/tty
                    echo
                    printf "\e[1;32mBack to clean git checker...\e[0m\n"
                    break
                    ;;
                i) break;;
                q) exit 0;;
                *) ;;
            esac
        done
    fi
    popd > /dev/null || exit 2
done < "$REPOS_FILE_PATH"

[ ! ${#WARNINGS[@]} -eq 0 ] && print_warnings
